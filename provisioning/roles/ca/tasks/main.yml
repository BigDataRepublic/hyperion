- name: Check if CA folder exists
  stat:
    path: "{{ ca.path }}"
  register: ca_exists

- block:
  - name: Make sure CA client certs path exists
    file:
      path: "{{ ca.path }}/{{ item }}"
      state: directory
      owner: root
      group: root
    with_items:
      - vpn_certs
      - kube_certs
      - certs

  # TODO: generate RSA key with passphrase instead of inline generation.

  - name: Generate CA
    command: >
      openssl req -nodes -new -newkey rsa:4096 -x509 -keyout {{ ca.path }}/ca.key
      -out {{ ca.path }}/{{ ca.root_cert_filename }} -days 730 -subj "/CN={{ vpn.hyperion_ip }}"

  - name: Set file permissions on CA private key
    file:
      path: "{{ ca.path }}/ca.key"
      owner: root
      group: root
      mode: "0600"

  - name: Copy ca configuration
    template:
      src: ca.conf.j2
      dest: "{{ ca.path }}/ca.conf"

  - name: Create certindex
    file:
      path: "{{ ca.path }}/certindex"
      state: touch

  - name: Create CA serial
    lineinfile:
      path: "{{ ca.path }}/ca.srl"
      line: "0001"
      state: present
      create: yes

  - name: Create crlnumber file
    lineinfile:
      path: "{{ ca.path }}/crlnumber"
      line: "0001"
      state: present
      create: yes
  when: ca_exists.stat.exists == False

- name: Ensures /etc/pki/ca-trust/source/anchors dir exists
  file:
    path: /etc/pki/ca-trust/source/anchors
    state: directory

- name: Copy CA certificate to trusted store
  copy:
    remote_src: yes
    src: "{{ ca.path }}/{{ ca.root_cert_filename }}"
    dest: "/etc/pki/ca-trust/source/anchors/hyperion.crt"
  notify: Reload trusted certificates
