- name: Add Kubernetes repository to Yum
  yum_repository:
    name: kubernetes
    state: present
    description: Kubernetes
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    enabled: 1
    gpgcheck: 1
    repo_gpgcheck: 1
    gpgkey:
      - https://packages.cloud.google.com/yum/doc/yum-key.gpg
      - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

- name: Disable SELinux
  selinux:
    state: permissive
    policy: targeted

- name: Install kubelet, kubeadm and kubectl
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - kubelet
    - kubeadm
    - kubectl

- name: Enable and start kubelet daemon
  systemd:
    name: kubelet
    enabled: yes
    state: started

- name: Ensure forwarding of packets is allowed in iptables
  iptables:
    chain: FORWARD
    policy: ACCEPT

- name: Make sure firewalld is disabled
  systemd:
    name: firewalld
    state: stopped

- name: Reset Kubernetes cluster
  command: kubeadm reset

- name: Make sure Kubernetes PKI directory exists
  file:
    path: /etc/kubernetes/pki
    state: directory

- name: Copy certificate to Kubernetes PKI directory
  copy:
    src: "{{ item }}"
    dest: /etc/kubernetes/pki/
    remote_src: yes
  with_items:
    - "{{ ca.path }}/ca.crt"
    - "{{ ca.path }}/ca.key"

- name: Copy kubeadm configuration cluster definition to tmp
  template:
    src: kubeadm-cluster-def.yml
    dest: /tmp/kubeadm-cluster-def.yml

- name: Copy audit configuration to the correct Kubernetes directory
  copy:
    src: "confs/audit-conf.yml"
    dest: "/etc/kubernetes/pki/audit-conf.yml"

- name: Initialize new Kubernetes cluster
  command: "kubeadm init --config /tmp/kubeadm-cluster-def.yml"

- name: Cleanup temporary files
  file:
    path: /tmp/kubeadm-cluster-def.yml
    state: absent

# TODO: Wait until cluster is properly initialized before continuing

- name: Delete CA key from Kubernetes PKI directory
  file:
    path: "/etc/kubernetes/pki/ca.key"
    state: absent

- name: Create .kube directory in /root
  file:
    path: /root/.kube
    state: directory
    owner: root
    group: root

- name: Copy kubectl information to /root directory
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes
    owner: root
    group: root

- name: Get kubectl version
  shell: kubectl version | base64 | tr -d '\n'
  register: kubever

- name: Install a pod network into the Kubernetes cluster
  command: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version={{ kubever.stdout }}"

- name: Untaint all master nodes so that pods can be scheduled on masters as well
  command: kubectl taint nodes --all node-role.kubernetes.io/master-

- name: Copy Kubernetes configuration files to host
  copy:
    src: "confs/{{ item | basename }}"
    dest: "/tmp/{{ item | basename }}"
  with_fileglob:
    - "confs/*.yml"

- name: Setup Kubernetes configuration
  command: "kubectl create -f /tmp/{{ item | basename }}"
  with_fileglob:
    - "confs/*.yml"

- name: Remove temporary configuration file
  file:
    path: "/tmp/{{ item | basename }}"
    state: absent
  with_fileglob:
    - "confs/*.yml"
